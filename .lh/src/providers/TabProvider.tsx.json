{
    "sourceFile": "src/providers/TabProvider.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1715596507232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1715598560536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-\n import { FC, PropsWithChildren, createContext, useContext } from 'react';\n import { Tab } from '../types/Tab';\n import { useParams } from 'react-router-dom';\n \n"
                },
                {
                    "date": 1715599437360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { FC, PropsWithChildren, createContext, useContext } from 'react';\n+import { FC, PropsWithChildren, createContext, useContext, useEffect, useState } from 'react';\n import { Tab } from '../types/Tab';\n import { useParams } from 'react-router-dom';\n \n interface TabsContextI {\n@@ -16,10 +16,14 @@\n const TabsContext = createContext<TabsContextI>({ tabs });\n \n export const TabsProvider: FC<PropsWithChildren> = ({ children }) => {\n   const { tabId } = useParams();\n+  const [activeTab, setActiveTab] = useState<Tab | undefined>();\n \n-  const activeTab = tabs.find(t => t.id === tabId);\n+  useEffect(() => {\n+    const tab = tabs.find(t => t.id === tabId);\n+    setActiveTab(tab);\n+  }, [tabId]);\n \n   const value = {\n     tabs,\n     activeTab,\n"
                },
                {
                    "date": 1715599451506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n   const [activeTab, setActiveTab] = useState<Tab | undefined>();\n \n   useEffect(() => {\n     const tab = tabs.find(t => t.id === tabId);\n+    \n     setActiveTab(tab);\n   }, [tabId]);\n \n   const value = {\n"
                },
                {
                    "date": 1715599502583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,5 @@\n-import {\n-  FC,\n-  PropsWithChildren,\n-  createContext,\n-  useContext,\n-  useEffect,\n-  useState,\n-} from 'react';\n+import { FC, PropsWithChildren, createContext, useContext } from 'react';\n import { Tab } from '../types/Tab';\n import { useParams } from 'react-router-dom';\n \n interface TabsContextI {\n@@ -23,16 +16,11 @@\n const TabsContext = createContext<TabsContextI>({ tabs });\n \n export const TabsProvider: FC<PropsWithChildren> = ({ children }) => {\n   const { tabId } = useParams();\n-  const [activeTab, setActiveTab] = useState<Tab | undefined>();\n \n-  useEffect(() => {\n-    const tab = tabs.find(t => t.id === tabId);\n+  const activeTab = tabs.find(t => t.id === tabId);\n \n-    setActiveTab(tab);\n-  }, [tabId]);\n-\n   const value = {\n     tabs,\n     activeTab,\n   };\n"
                }
            ],
            "date": 1715596507232,
            "name": "Commit-0",
            "content": "\nimport { FC, PropsWithChildren, createContext, useContext } from 'react';\nimport { Tab } from '../types/Tab';\nimport { useParams } from 'react-router-dom';\n\ninterface TabsContextI {\n  tabs: Tab[];\n  activeTab?: Tab;\n}\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst TabsContext = createContext<TabsContextI>({ tabs });\n\nexport const TabsProvider: FC<PropsWithChildren> = ({ children }) => {\n  const { tabId } = useParams();\n\n  const activeTab = tabs.find(t => t.id === tabId);\n\n  const value = {\n    tabs,\n    activeTab,\n  };\n\n  return <TabsContext.Provider value={value}>{children}</TabsContext.Provider>;\n};\n\nexport const useTabs = () => useContext(TabsContext);\n"
        }
    ]
}